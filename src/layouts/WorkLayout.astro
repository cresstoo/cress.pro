---
import type { CollectionEntry } from 'astro:content'
import PageLayout from './PageLayout.astro'
import MarkdownWrapper from '@/components/MarkdownWrapper.astro'

interface Props {
  work: CollectionEntry<'works'>
}

const { work } = Astro.props
const { title, description, date, cover, team, client, task, duration, website, websiteDesc, overview } = work.data

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  "name": title,
  "description": description,
  "image": cover,
  "datePublished": date.toISOString(),
  "author": {
    "@type": "Person",
    "name": team?.[0] || "Cress"
  },
  "creator": {
    "@type": "Organization",
    "name": client?.[0]
  }
}
---

<PageLayout title={title} description={description} image={cover}>
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  <article>
    {/* 顶部大通栏头图 */}
    <div class="w-full">
      <img 
        src={cover} 
        alt={`${title} - Cover Image`}
        class="w-full aspect-[3/1] object-cover"
        width="3000"
        height="1000"
        loading="eager"
        fetchpriority="high"
      />
    </div>

    {/* 内容区域 */}
    <div class="max-w-4xl mx-auto px-4 py-16">
      <header class="mb-16 space-y-8 fade-in-section">
        <div class="space-y-4">
          <h1 class="!text-[72px] !leading-tight font-bold work-title">{title}</h1>
          <p class="text-lg text-gray-600 dark:text-gray-400">{description}</p>
          
          <dl class="grid grid-cols-1 md:grid-cols-[repeat(5,max-content)] md:gap-x-16 gap-y-8 items-baseline">
            {client && client.length > 0 && (
              <div class="space-y-2">
                <dt class="text-gray-500 dark:text-gray-400 text-sm tracking-wider">Client</dt>
                <dd class="font-medium">{client.join(', ')}</dd>
              </div>
            )}
            {task && task.length > 0 && (
              <div class="space-y-2">
                <dt class="text-gray-500 dark:text-gray-400 text-sm tracking-wider">Task</dt>
                <dd>
                  <ul class="font-medium flex flex-col gap-1">
                    {task.map(item => (
                      <li>{item}</li>
                    ))}
                  </ul>
                </dd>
              </div>
            )}
            {team && team.length > 0 && (
              <div class="space-y-2">
                <dt class="text-gray-500 dark:text-gray-400 text-sm tracking-wider">Team</dt>
                <dd class="font-medium">{team.join(', ')}</dd>
              </div>
            )}
            {duration && duration.length > 0 && (
              <div class="space-y-2">
                <dt class="text-gray-500 dark:text-gray-400 text-sm tracking-wider">Date</dt>
                <dd class="font-medium">{duration.join(' - ')}</dd>
              </div>
            )}
            {website && (
              <div class="space-y-2">
                <dt class="text-gray-500 dark:text-gray-400 text-sm tracking-wider">Website↗</dt>
                <dd>
                  <a 
                    href={website}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-accent hover:underline font-medium"
                  >
                    {websiteDesc || 'Visit Site'}
                  </a>
                </dd>
              </div>
            )}
          </dl>
        </div>
      </header>

      {/* 第二个大通栏图片区域 */}
      {overview && (
        <div class="w-screen relative left-1/2 right-1/2 -mx-[50vw] mb-16 fade-in-section">
          <img 
            src={overview}
            alt={`${title} - Project Overview`}
            class="w-full aspect-video object-cover"
            width="1920"
            height="1080"
            loading="lazy"
          />
        </div>
      )}

      {/* Markdown 内容添加淡入动画 */}
      <MarkdownWrapper class="fade-in-section">
        <slot />
      </MarkdownWrapper>
    </div>
  </article>
</PageLayout>

<style>
  .work-title {
    font-size: 72px !important;
    line-height: 1.1 !important;
  }

  /* 淡入动画基础样式 */
  .fade-in-section {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
  }

  /* 当元素可见时添加的类 */
  .fade-in-section.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  // 创建 Intersection Observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('is-visible');
        // 一旦显示就不再观察
        observer.unobserve(entry.target);
      }
    });
  }, {
    root: null,
    threshold: 0.1, // 当元素10%可见时触发
    rootMargin: '0px'
  });

  // 观察所有需要淡入的元素
  document.querySelectorAll('.fade-in-section').forEach((section) => {
    observer.observe(section);
  });

  // 页面切换时重新初始化
  document.addEventListener('swup:content:replace', () => {
    document.querySelectorAll('.fade-in-section').forEach((section) => {
      section.classList.remove('is-visible');
      observer.observe(section);
    });
  });
</script>
